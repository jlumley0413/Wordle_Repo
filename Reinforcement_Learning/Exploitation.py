import random
import pandas as pd
import numpy as np
from Exploit import Exploit

#This is going to exploitation
#Can't wait to write this!

#Here is the code. Going to merge this into main.

#Steps:
#0) Make 5 letter list
#1) Read in q-table
#2) Run several times:
#       Choose random correct word
#       Take highest q-value decision as guess word
#       Run through GYB checker to eliminate words
#       Take the highest q-value decision as guess word
#       Continue until solution
#       Record # of guess words
#3) Add in epsilon degrading factor?
#4) Integrate with exploration code?

#0)
five_letter_list = list()
with open("Dictionary_58110.txt") as f:
    for word in f:
        x = word.rstrip("\n")
        if len(x) == 5:
            five_letter_list.append(x)

f.close()

with open("Dictionary_58110.txt") as f:
    for word in f:
        x = word.rstrip("\n")
        if len(x) == 4:
            x = x + 's'
            if x in five_letter_list:
                five_letter_list.remove(x)

f.close()

print(len(five_letter_list))

#1
Q_table = pd.read_csv('Q_table.txt', sep=" ", header=None, index_col = 0)
Q_table.columns = ["100%","40-99%","16-39%","6-15%","1-5%","0.25-1%","<0.25%"]
Q_table = Q_table.fillna(0)
Q_table.to_csv(r'C:\Users\Joshua Lumley\Documents\Python_with_Ian\Wordle\Reinforcement_Learning\Q_table3.txt', header=None, index=five_letter_list, sep=' ', mode='a')

#print(Q_table)

#print(Q_table.idxmax()["100%"])

cumulative_tries = []

#2)
for count in range(1000):
    correct_word = five_letter_list[random.randrange(len(five_letter_list))]
    #print(correct_word)
    num_tries = Exploit(correct_word,Q_table)
    cumulative_tries.append(num_tries)
    if count%200 == 0:
        print(count/20)
    #print("Num_tries = ", num_tries, "\n")

print(cumulative_tries)
print("Average: ", np.mean(cumulative_tries))

#print(Q_table)
